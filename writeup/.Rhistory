###Data Preparation
####Load Relevant Libraries and Functions
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(readxl)
####Import data
pilot <- read_xlsx('C:/Users/crazy/OneDrive/Desktop/pilditch2019/Pilot_data_revised.xlsx')
#### Data exclusion / filtering
pilot_rows12_removed <- pilot[-c(1,2),] # remove additional rows from qualtrics file
filtered_pilot <- select(pilot_rows12_removed, +contains("Nitro"), +contains("Ster"), +contains("BT"), +contains("Crash")) #remove extra qualtrics columns
exp2_filtered <- select(filtered_pilot, -contains("rn")) #remove reasoning for choice
exp2_decision <- select(exp2_filtered, -contains("%")) # only decisions retained
exp2_decision_long <- gather(exp2_decision, result, na.rm = TRUE) #convert to tidy/long data format, remove NAs
exp2_decision_long_mod <- exp2_decision_long %>%
separate(result, into = c("Scenario", "Result_given", "Condition"), sep = "_" )
# group data by condition, find mean porportions of each condition
#Analysis 1
#### Prepare data for analysis - create columns etc.
View(exp2_decision_long_mod)
View(exp2_decision_long_mod)
?group_by()
?summarize
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise()
exp2_means
?replace
exp2_decision_long_mod <- exp2_decision_long_mod %>%
replace("ex", "exp")
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise()
exp2_means
exp2_decision_long_mod <- exp2_decision_long %>%
separate(result, into = c("Scenario", "Result_given", "Condition"), sep = "_" )
exp2_decision_long_mod <- exp2_decision_long_mod %>%
replace(Condition , "ex", "exp")
exp2_decision_long_mod <-
replace(exp2_decision_long_mod$Condition , "ex", "exp")
View(exp2_decision)
View(exp2_decision)
exp2_decision <- select(exp2_filtered, -contains("%")) # only decisions retained
exp2_decision_long <- gather(exp2_decision, result, na.rm = TRUE) #convert to tidy/long data format, remove NAs
exp2_decision_long_mod <- exp2_decision_long %>%
separate(result, into = c("Scenario", "Result_given", "Condition"), sep = "_" )
exp2_decision_long_mod <-
replace(exp2_decision_long_mod$Condition , "ex", "exp")
exp2_decision_long <- gather(exp2_decision, result, na.rm = TRUE) #convert to tidy/long data format, remove NAs
exp2_decision_long_mod <- exp2_decision_long %>%
separate(result, into = c("Scenario", "Result_given", "Condition"), sep = "_" )
exp2_decision_long_mod$Condition =
replace(exp2_decision_long_mod$Condition , "ex", "exp")
exp2_decision_long_mod$Condition =
replace(exp2_decision_long_mod$Condition, "ex", "exp")
View(exp2_decision_long_mod)
View(exp2_decision_long_mod)
exp2_decision_long_mod$Condition <-
replace(exp2_decision_long_mod$Condition, "ex", "exp")
exp2_decision_long_mod$Condition <-
replace(exp2_decision_long_mod$Condition, exp2_decision_long_mod$Condition == "ex", "exp")
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise
exp2_means
?summarise
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(count("Yes", "No", "Can't Tell"))
#Analysis 1
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(tally())
#Analysis 1
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(tally(value))
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(value)
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise("value")
exp2_means
library(tidyverse)
library(DT) # dependency
library(ggthemes) # dependency
library(wordbankr)
library(purrr)
library(shiny)
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
sgf <- read_csv("data/stiller_scales_data.csv")
sgf
sgf %>%
summarise(correct = mean(correct),
n_observations = length(subid))
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(proportion_yes = count())
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(proportion_yes = count(exp2_decision_long_mod$value))
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(proportion_yes = count(exp2_decision_long_mod$value == "Yes"))
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(proportion_yes = count(exp2_decision_long_mod$value = "Yes"))
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(proportion_yes = count(exp2_decision_long_mod, 'value'))
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
count(exp2_decision_long_mod, 'value')
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
count('value')
exp2_means
exp2_decision_long_mod <- exp2_decision_long %>%
separate(result, into = c("Scenario", "Result_given", "Condition"), sep = "_" )
exp2_decision_long_mod$Condition <-
replace(exp2_decision_long_mod$Condition, exp2_decision_long_mod$Condition == "ex", "exp") #convert all "ex" nomenclature to "exp" nonmenclature for more descriptive variables, initial Qualtrics variables were character restricted
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
count('value')
exp2_means
exp2_decision_long_mod <- exp2_decision_long %>%
separate(result, into = c("Scenario", "Result_given", "Condition"), sep = "_" )
exp2_decision_long_mod$Condition <-
replace(exp2_decision_long_mod$Condition, exp2_decision_long_mod$Condition == "ex", "exp") #convert all "ex" nomenclature to "exp" nonmenclature for more descriptive variables, initial Qualtrics variables were character restricted
count(exp2_decision_long_mod, 'value')
count(exp2_decision_long_mod, 'value')
count(exp2_decision_long_mod, Result_given, Condition, value, 'count')
count(exp2_decision_long_mod, Result_given, Condition, value, name = 'count')
exp2_raw_counts <- count(exp2_decision_long_mod, Result_given, Condition, value, name = 'count')
View(exp2_raw_counts)
View(exp2_raw_counts)
exp2_raw_counts
exp2_proportions <- exp2_decision_long_mod %>%
group_by(Result_given, Condition)
exp2_proportions
exp2_decision_long_mod$Scenario <-
replace(exp2_decision_long_mod$Scenario, exp2_decision_long_mod$Scenario == "nitro", "Nitro")
exp2_proportions <- exp2_decision_long_mod %>%
group_by(Result_given, Condition)
exp2_proportions
exp2_raw_counts <- count(exp2_decision_long_mod, Result_given, Condition, value, name = 'count')
exp2_raw_counts
prop.table(exp2_raw_counts)
exp2_raw_counts <- count(exp2_decision_long_mod, Result_given, Condition, value, name = 'count')
exp2_raw_counts
prop.table(exp2_raw_counts, count)
table(exp2_raw_counts)
?table
table(exp2_raw_counts, Condition, Result_given, value)
table(exp2_raw_counts, Condition, Result_given, value)
#Analysis 1
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
length(value)
exp2_means <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
length('value')
xtab2 <- xtabs(~ Result_given +value +Condition, Scenario)
xtab2 <- xtabs(~ Result_given +value +Condition, exp2_decision_long_mod)
xtab2
xtab2 <- xtabs(~ Result_given +value +Condition + Scenario, exp2_decision_long_mod)
xtab2
View(exp2_raw_counts)
View(exp2_raw_counts)
View(exp2_raw_counts)
View(exp2_raw_counts)
pilot_1 <- read_xlsx('https://github.com/psych251/pilditch2019/blob/master/Pilot_data_revised.xlsx')
pilot_1 <- read_xlsx('http://github.com/psych251/pilditch2019/blob/master/Pilot_data_revised.xlsx')
pilot_1 <- read_xlsx('D:/Desktop/Psych_251/Pilot_data_revised.xlsx')
View(pilot_1)
View(pilot_1)
pilot_1 <- read.csv('https://github.com/psych251/pilditch2019/blob/master/Pilot_study.csv')
View(pilot_1)
pilot_1 <- read.csv('https://github.com/psych251/pilditch2019/blob/master/Pilot_study.csv', header = TRUE)
pilot_1 <- read_csv('https://github.com/psych251/pilditch2019/blob/master/Pilot_study.csv', header = TRUE)
pilot_1 <- read_csv('https://github.com/psych251/pilditch2019/blob/master/Pilot_study.csv')
View(pilot_1)
exp2_means_1 <- exp2_decision_long_mod %>%
group_by(Result_given, Condition) %>%
summarise(n = n())
View(exp2_means_1)
View(exp2_means_1)
View(exp2_proportions)
View(exp2_proportions)
View(exp2_means)
View(exp2_means)
View(exp2_means_1)
View(exp2_means_1)
View(exp2_raw_counts)
View(exp2_raw_counts)
exp2_means_1 <- exp2_decision_long_mod %>%
group_by(Result_given, Condition, value) %>%
summarise(n = n())
View(exp2_means_1)
